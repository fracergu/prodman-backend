datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Config {
    key   String @id
    type  String
    value String
}

model User {
    id             Int             @id @default(autoincrement())
    email          String          @unique
    name           String
    lastName       String?
    password       String
    role           String
    Tasks          Task[]
    StockMovements StockMovement[]
    Logs           Log[]
}

model Product {
    id                  Int                @id @default(autoincrement())
    name                String
    description         String?
    price               Decimal
    image               String?
    createdAt           DateTime
    updatedAt           DateTime
    ProductCategories   ProductCategory[]
    StockMovements      StockMovement[]
    SubTasks            SubTask[]
    ProductComponents   ProductComponent[] @relation("ParentProduct")
    ComponentOfProducts ProductComponent[] @relation("ChildProduct")
}

model ProductComponent {
    id            Int     @id @default(autoincrement())
    parentProduct Int
    childProduct  Int
    quantity      Int
    Parent        Product @relation("ParentProduct", fields: [parentProduct], references: [id])
    Child         Product @relation("ChildProduct", fields: [childProduct], references: [id])
}

model Category {
    id                Int               @id @default(autoincrement())
    name              String
    description       String?
    ProductCategories ProductCategory[]
}

model ProductCategory {
    id       Int      @id @default(autoincrement())
    product  Int
    category Int
    Product  Product  @relation(fields: [product], references: [id])
    Category Category @relation(fields: [category], references: [id])
}

model StockMovement {
    id       Int      @id @default(autoincrement())
    product  Int
    quantity Int
    date     DateTime
    user     Int
    User     User     @relation(fields: [user], references: [id])
    Product  Product  @relation(fields: [product], references: [id])
}

model Task {
    id        Int       @id @default(autoincrement())
    worker    Int
    createdAt DateTime
    notes     String?
    User      User      @relation(fields: [worker], references: [id])
    SubTasks  SubTask[]
}

model SubTask {
    id            Int            @id @default(autoincrement())
    task          Int
    product       Int
    quantity      Int
    status        String
    notes         String?
    Task          Task           @relation(fields: [task], references: [id])
    Product       Product        @relation(fields: [product], references: [id])
    SubTaskEvents SubTaskEvent[]
}

model SubTaskEvent {
    id                Int      @id @default(autoincrement())
    subtask           Int
    date              DateTime
    quantityCompleted Int
    SubTask           SubTask  @relation(fields: [subtask], references: [id])
}

model Log {
    id        Int      @id @default(autoincrement())
    tableName String
    rowId     Int
    action    String
    date      DateTime
    user      Int
    User      User     @relation(fields: [user], references: [id])
}

model session {
    sid    String    @id @default(cuid())
    sess   String
    expire DateTime?
}
